#!/bin/bash

# This script builds a Docker volume named ouo-software that should be mounted at /software in the Docker container.
# The contents of this volume are not copied into the binary release or the GitLab artifacts unless explicitly done so
# by some script.

set -ex

DOCKERFILE="Dockerfile.$$"
trap "rm '$DOCKERFILE'" EXIT
(
    #-----------------------------
    # Dockerfile header
    #-----------------------------
    echo "# -*- shell-script -*-"
    echo "from ubuntu:20.04"
    echo "run : $(date +"%Y-%m-%d %H:%M:%S")"
    echo "run mkdir -p /software"

    #-----------------------------
    # Robb's development machines
    #-----------------------------

    # Latest versions of non-public software repositories, not distributed
    EXTRA="$HOME/GS-CAD/ROSE/ouo-software"
    if [ -d "$EXTRA/megachiropteran/." ]; then
        git -C "$EXTRA/megachiropteran/." bundle create "$(pwd)/megachiropteran.bundle" HEAD
        echo "copy megachiropteran.bundle /software/megachiropteran.bundle"
    fi
    if [ -d "$EXTRA/estcp-software/." ]; then
        git -C "$EXTRA/estcp-software/." bundle create "$(pwd)/estcp-software.bundle" HEAD
        echo "copy estcp-software.bundle /software/estcp-software.bundle"
    fi
    if [ -d "$EXTRA/rose-garden/." ]; then
        git -C "$EXTRA/rose-garden/." bundle create "$(pwd)/rose-garden.bundle" HEAD
        echo "copy rose-garden.bundle /software/rose-garden.bundle"
    fi

    # Juliet binary test suites used to test some tools before release, but the tests themselves are not released.
    if [ -d "$EXTRA/juliet/." ]; then
	tar chf - -C "$EXTRA" juliet |gzip -9 >juliet.tar.gz
	echo "copy juliet.tar.gz /software/juliet.tar.gz"
    fi

    # Extra source files to distribute with the binary release, thus put in "artifacts"
    if [ -d "$EXTRA/rose-demos/." ]; then
        mkdir -p artifacts
        git -C "$EXTRA/rose-demos/." bundle create "$(pwd)/artifacts/rose-demos.bundle" HEAD
        if [ -r "$EXTRA/rose-demos/README.md" ]; then
            cp "$EXTRA/rose-demos/README.md" "artifacts/rose-demos-README.md"
        fi
    fi

    # A version of the vxworks attribute library distributed by Jim Leek
    # These are intended to be part of the ROSE binary release
    if [ -d "$EXTRA/vxworks_attributeLib/." ]; then
        mkdir -p artifacts
        rsync --archive --quiet --delete --exclude="*~" "$EXTRA/vxworks_attributeLib/./" "artifacts/vxworks_attributeLib"
    fi
    if [ -r "$EXTRA/attributeLibDemo.tar.gz" ]; then
        mkdir -p artifacts
        cp "$EXTRA/attributeLibDemo.tar.gz" "artifacts/."
    fi

    # Source files needed for Jovial analysis support, maintained by Craig Rasmussen and/or Tristan Vanderbruggen
    for file in \
        "$EXTRA/aterm-3.0.tar.gz" \
        "$EXTRA/sdf2-bundle-2.4.1.tar.gz" \
        "$EXTRA/strategoxt-0.17.1.tar.gz" \
        "$EXTRA/tests.tar"
    do
        if [ -r "$file" ]; then
            cp "$file" .
            echo "copy ${file##*/} /software/${file##*/}"
        fi
    done

    if [ -d artifacts ]; then
        echo "copy artifacts /software/artifacts"
    fi

    #-----------------------------
    # Dockerfile footer
    #-----------------------------
    echo "volume /software"
) >"$DOCKERFILE"

# Run Docker commands to create the volume
cat -n "$DOCKERFILE"
image_name="populate-software-volume.image"
volume_name=ouo-software
docker volume rm "$volume_name" || true
docker image build -f "$DOCKERFILE" -t "$image_name" .
docker run --rm -it --mount "source=$volume_name,destination=/software" "$image_name" true
docker image rm "$image_name"
